"""Initial migration - create all tables

Revision ID: b08e1f353e69
Revises: 
Create Date: 2025-10-21 05:22:53.430688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b08e1f353e69'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.String(length=255), nullable=False),
    sa.Column('actor_type', sa.String(length=50), nullable=False),
    sa.Column('actor_name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('blockchain_identity', sa.String(length=255), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_actor_active', 'actors', ['is_active'], unique=False)
    op.create_index('idx_actor_type_role', 'actors', ['actor_type', 'role'], unique=False)
    op.create_index(op.f('ix_actors_actor_id'), 'actors', ['actor_id'], unique=True)
    op.create_index(op.f('ix_actors_id'), 'actors', ['id'], unique=False)
    op.create_table('compliance_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('rule_id', sa.String(length=255), nullable=True),
    sa.Column('affected_entity_type', sa.String(length=50), nullable=False),
    sa.Column('affected_entity_id', sa.String(length=255), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('is_alerted', sa.Boolean(), nullable=False),
    sa.Column('acknowledged_by_actor_id', sa.Integer(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_status', sa.String(length=50), nullable=False),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('blockchain_transaction_id', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['acknowledged_by_actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_compliance_entity', 'compliance_events', ['affected_entity_type', 'affected_entity_id'], unique=False)
    op.create_index('idx_compliance_event_type', 'compliance_events', ['event_type'], unique=False)
    op.create_index('idx_compliance_resolution', 'compliance_events', ['resolution_status'], unique=False)
    op.create_index('idx_compliance_severity', 'compliance_events', ['severity'], unique=False)
    op.create_index('idx_compliance_timestamp', 'compliance_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_compliance_events_event_id'), 'compliance_events', ['event_id'], unique=True)
    op.create_index(op.f('ix_compliance_events_id'), 'compliance_events', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('national_id_hash', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('contact_phone', sa.String(length=50), nullable=True),
    sa.Column('kyc_status', sa.String(length=50), nullable=False),
    sa.Column('aml_status', sa.String(length=50), nullable=False),
    sa.Column('consent_preferences', sa.JSON(), nullable=True),
    sa.Column('blockchain_record_hash', sa.String(length=255), nullable=True),
    sa.Column('created_by_actor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_actor_id'], ['actors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_customer_created_at', 'customers', ['created_at'], unique=False)
    op.create_index('idx_customer_kyc_aml', 'customers', ['kyc_status', 'aml_status'], unique=False)
    op.create_index('idx_customer_name', 'customers', ['first_name', 'last_name'], unique=False)
    op.create_index(op.f('ix_customers_customer_id'), 'customers', ['customer_id'], unique=True)
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('customer_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by_actor_id', sa.Integer(), nullable=False),
    sa.Column('blockchain_transaction_id', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_customer_history_customer', 'customer_history', ['customer_id'], unique=False)
    op.create_index('idx_customer_history_timestamp', 'customer_history', ['timestamp'], unique=False)
    op.create_index(op.f('ix_customer_history_id'), 'customer_history', ['id'], unique=False)
    op.create_table('loan_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_application_id', sa.String(length=255), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('application_date', sa.DateTime(), nullable=False),
    sa.Column('requested_amount', sa.Float(), nullable=False),
    sa.Column('loan_type', sa.String(length=100), nullable=False),
    sa.Column('application_status', sa.String(length=50), nullable=False),
    sa.Column('introducer_id', sa.String(length=255), nullable=True),
    sa.Column('current_owner_actor_id', sa.Integer(), nullable=False),
    sa.Column('approval_amount', sa.Float(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('blockchain_record_hash', sa.String(length=255), nullable=True),
    sa.Column('created_by_actor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['current_owner_actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_loan_amount', 'loan_applications', ['requested_amount'], unique=False)
    op.create_index('idx_loan_customer', 'loan_applications', ['customer_id'], unique=False)
    op.create_index('idx_loan_status_date', 'loan_applications', ['application_status', 'application_date'], unique=False)
    op.create_index('idx_loan_type', 'loan_applications', ['loan_type'], unique=False)
    op.create_index(op.f('ix_loan_applications_id'), 'loan_applications', ['id'], unique=False)
    op.create_index(op.f('ix_loan_applications_loan_application_id'), 'loan_applications', ['loan_application_id'], unique=True)
    op.create_table('loan_application_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_application_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('previous_status', sa.String(length=50), nullable=True),
    sa.Column('new_status', sa.String(length=50), nullable=True),
    sa.Column('field_name', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by_actor_id', sa.Integer(), nullable=False),
    sa.Column('blockchain_transaction_id', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['loan_application_id'], ['loan_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_loan_history_loan', 'loan_application_history', ['loan_application_id'], unique=False)
    op.create_index('idx_loan_history_status', 'loan_application_history', ['new_status'], unique=False)
    op.create_index('idx_loan_history_timestamp', 'loan_application_history', ['timestamp'], unique=False)
    op.create_index(op.f('ix_loan_application_history_id'), 'loan_application_history', ['id'], unique=False)
    op.create_table('loan_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_application_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(length=100), nullable=False),
    sa.Column('document_name', sa.String(length=255), nullable=False),
    sa.Column('document_hash', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=False),
    sa.Column('uploaded_by_actor_id', sa.Integer(), nullable=False),
    sa.Column('blockchain_record_hash', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['loan_application_id'], ['loan_applications.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_actor_id'], ['actors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_hash', 'loan_documents', ['document_hash'], unique=False)
    op.create_index('idx_document_loan', 'loan_documents', ['loan_application_id'], unique=False)
    op.create_index('idx_document_type', 'loan_documents', ['document_type'], unique=False)
    op.create_index('idx_document_verification', 'loan_documents', ['verification_status'], unique=False)
    op.create_index(op.f('ix_loan_documents_id'), 'loan_documents', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_loan_documents_id'), table_name='loan_documents')
    op.drop_index('idx_document_verification', table_name='loan_documents')
    op.drop_index('idx_document_type', table_name='loan_documents')
    op.drop_index('idx_document_loan', table_name='loan_documents')
    op.drop_index('idx_document_hash', table_name='loan_documents')
    op.drop_table('loan_documents')
    op.drop_index(op.f('ix_loan_application_history_id'), table_name='loan_application_history')
    op.drop_index('idx_loan_history_timestamp', table_name='loan_application_history')
    op.drop_index('idx_loan_history_status', table_name='loan_application_history')
    op.drop_index('idx_loan_history_loan', table_name='loan_application_history')
    op.drop_table('loan_application_history')
    op.drop_index(op.f('ix_loan_applications_loan_application_id'), table_name='loan_applications')
    op.drop_index(op.f('ix_loan_applications_id'), table_name='loan_applications')
    op.drop_index('idx_loan_type', table_name='loan_applications')
    op.drop_index('idx_loan_status_date', table_name='loan_applications')
    op.drop_index('idx_loan_customer', table_name='loan_applications')
    op.drop_index('idx_loan_amount', table_name='loan_applications')
    op.drop_table('loan_applications')
    op.drop_index(op.f('ix_customer_history_id'), table_name='customer_history')
    op.drop_index('idx_customer_history_timestamp', table_name='customer_history')
    op.drop_index('idx_customer_history_customer', table_name='customer_history')
    op.drop_table('customer_history')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_customer_id'), table_name='customers')
    op.drop_index('idx_customer_name', table_name='customers')
    op.drop_index('idx_customer_kyc_aml', table_name='customers')
    op.drop_index('idx_customer_created_at', table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_compliance_events_id'), table_name='compliance_events')
    op.drop_index(op.f('ix_compliance_events_event_id'), table_name='compliance_events')
    op.drop_index('idx_compliance_timestamp', table_name='compliance_events')
    op.drop_index('idx_compliance_severity', table_name='compliance_events')
    op.drop_index('idx_compliance_resolution', table_name='compliance_events')
    op.drop_index('idx_compliance_event_type', table_name='compliance_events')
    op.drop_index('idx_compliance_entity', table_name='compliance_events')
    op.drop_table('compliance_events')
    op.drop_index(op.f('ix_actors_id'), table_name='actors')
    op.drop_index(op.f('ix_actors_actor_id'), table_name='actors')
    op.drop_index('idx_actor_type_role', table_name='actors')
    op.drop_index('idx_actor_active', table_name='actors')
    op.drop_table('actors')
    # ### end Alembic commands ###
